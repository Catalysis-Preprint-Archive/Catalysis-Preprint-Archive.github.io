#+TITLE: CaPPA - The Catalysis Preprint Archive
#+author: John Kitchin
#+options: toc:nil


* About CaPPA
The Catalysis Preprint Archive provides access to preprints of published papers in the field of catalysis. The goal is to provide a curated, aggregated repository of the preprints, prepared by the authors. These repositories will ideally contain:
- README.org :: A description of the preprint repository
- manuscript source file :: A LaTeX, org-mode, or MS Word document, and files required to build it.
- supporting information :: Data and analysis files

Our goal is to make sharing our work and data as easy as possible.

CaPPA is accessible through this site, through Emacs, and eventually through Python and Ruby.

* Available preprints
Each link below will take you to the preprint page, which has more information about the preprint.

#+BEGIN_SRC emacs-lisp :exports results
(loop for (label . props) in (package-build-archive-alist)
      collect (list
	       (format "[[./preprints/%s-%s.%s.html][%s]]"
		       label
		       (nth 0 (elt props 0))
		       (nth 1 (elt props 0))
		       label)
		       (elt props 2)))
#+END_SRC

** TODO Improve the table with more information about the preprints
Maybe DOI, descriptions?


* Install CaPPA in Emacs

To access the CaPPA archive in Emacs add this to an init file.

#+BEGIN_SRC emacs-lisp :exports code
(add-to-list 'package-archives
	     '("CaPPA" . "http://catalysis-preprint-archive.github.io/preprints/") t)
#+END_SRC

Then, you can install the `cappa' package and preprints using the Emacs package installer.

Use the `cappa' command to list the installed preprints, and preprints available for installation through Emacs. This is a work in progress.

* Submitting a preprint
The basic process to submit a preprint to CaPPA is to create a preprint repository (e.g. https://github.com/KitchinHUB/kitchingroup-57). Then, send a "recipe" file (e.g. https://github.com/Catalysis-Preprint-Archive/melpa/blob/cappa/recipes/kitchingroup-57) to jkitchin@andrew.cmu.edu.

I am working on streamlining this process.

* Interested in developing?
** User experience
If you can contribute ideas on how to make this work well, they are welcome.
** Web interface to CaPPA
I can always use help making the Web interface better.

** Alternate interfaces to CaPPA
You can access data about the archives here [[./archive.json]] and the recipes at [[./recipes.json]]. You can build a library in Python or Ruby to access everything from those I think. Let me know if you do that or want help doing it.

Here is a typical entry for the archive.json file
#+BEGIN_SRC text
"label":{"ver":[major,minor],"deps":null,"desc":"Some descriptive text","type":"tar","props":{"authors":{"John Kitchin":"jkitchin@andrew.cmu.edu"},"maintainer":{"John Kitchin":"jkitchin@andrew.cmu.edu"}}}


"kitchingroup-9":{"ver":[20160131,1150],"deps":null,"desc":"preprint","type":"tar","props":{"authors":{"John Kitchin":"jkitchin@andrew.cmu.edu"},"maintainer":{"John Kitchin":"jkitchin@andrew.cmu.edu"}}}
#+END_SRC

Preprints as tar archive files in /preprints/label-major.minor.tar.

A typical recipe entry is:
#+BEGIN_SRC text
"kitchingroup-9":{"fetcher":"github","repo":"KitchinHUB/kitchingroup-9","files":["*"]}
#+END_SRC
* Acknowledgements
CaPPA is built on the shoulders of [[http://melpa.org][MELPA]].
